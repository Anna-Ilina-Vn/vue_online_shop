{"remainingRequest":"/Users/mac/Desktop/projects/shop/tutorial_online_shop/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mac/Desktop/projects/shop/tutorial_online_shop/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mac/Desktop/projects/shop/tutorial_online_shop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/projects/shop/tutorial_online_shop/src/components/catalog/v-catalog.vue?vue&type=template&id=46f57d28&","dependencies":[{"path":"/Users/mac/Desktop/projects/shop/tutorial_online_shop/src/components/catalog/v-catalog.vue","mtime":1618571744696},{"path":"/Users/mac/Desktop/projects/shop/tutorial_online_shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/projects/shop/tutorial_online_shop/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mac/Desktop/projects/shop/tutorial_online_shop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/projects/shop/tutorial_online_shop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}